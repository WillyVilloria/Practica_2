---
- name: "{{playbookname}}"
  hosts: webservers
  remote_user: miguelcontenedor
  become: true
  #vars:
    #  ansible_python_interpreter: /usr/lib/python
  vars_files:
    - vars/00_vars.yaml
#  roles:
#    - role_01
  tasks:
    - name: 'cambio zonahoraria'
      timezone:
        name: "{{ zone }}"

    - name: 'insalo httpd'
      yum:
        name: "{{ rpms1 }}"
        state: latest
    
    - name: 'instalo podman'
      yum:
        name: "{{ rpms2 }}"
        state: latest

    - name: 'instalo skopeo'
      yum:
        name: "{{ rpms3 }}"
        state: latest

    - name: 'instalo openssl'
      yum:
        name: "{{ rpms4 }}"
        state: latest

    - name: 'Instalo python3'
      yum:
        name: python3
        state: latest

    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: "{{path}}"
        state: directory
        mode: '0755'

    - name: Instalar passlib en el host remoto
      pip:
        name: passlib
        state: present
      become: true

    - name: Crear archivo htpasswd
      community.general.htpasswd:
        name: miguel
        password: nopass
        path: "{{path}}/.creds"

    - name: Generate an OpenSSL private key with a different size (2048 bits)
      community.crypto.openssl_privatekey:
          path: "{{path}}/localhost.key"
          size: 2048

    - name: Generate an OpenSSL Certificate Signing Request
      community.crypto.openssl_csr:
        path: "{{path}}/localhost.csr"
        privatekey_path: "{{path}}/localhost.key"
        common_name: www.ansible.com

    - name: Generate a Self Signed OpenSSL certificate
      community.crypto.x509_certificate:
        path: "{{path}}/localhost.crt"
        privatekey_path: "{{path}}/localhost.key"
        csr_path: "{{path}}/localhost.csr"
        provider: selfsigned
    
    - name: Copy file index.html
      ansible.builtin.copy:
        src: files/index.html
        dest: "{{path}}/index.html"
        mode: '0644'

    - name: Copy file ansible/files/.htaccess
      ansible.builtin.copy:
        src: files/.htaccess
        dest: "{{path}}/.htaccess"
        mode: '0644'
    
    - name: Copy file ansible/files/httpd.conf
      ansible.builtin.copy:
        src: files/httpd.conf
        dest: "{{path}}/httpd.conf"
        mode: '0644'

    - name: Copy file ansible/files/Containerfile
      ansible.builtin.copy:
        src: files/Containerfile
        dest: "{{path}}/Containerfile"
        mode: '0644'

    - name: Login to default registry and create ${XDG_RUNTIME_DIR}/containers/auth.json
      containers.podman.podman_login:
        username: miguelacr
        password: 'Afk13V8viuMaYUtbiViYa5381BL+rVJ23RbaLR1OBM+ACRBSRs+b'
        registry: miguelacr.azurecr.io
      
    - name: Build a basic OCI image
      containers.podman.podman_image:
        name: webserver
        path: "{{path}}"

    - containers.podman.podman_tag:
        image: localhost/webserver:latest
        target_names:
          - miguelacr.azurecr.io/webserver:casopractico2

    - name: Build and push an image using existing credentials
      containers.podman.podman_image:
        name: miguelacr.azurecr.io/webserver:casopractico2
        path: "{{path}}"
        push: true
        push_args:
          dest: miguelacr.azurecr.io

    - name: Create a webserver container
      containers.podman.podman_container:
        name: web
        ports: 8080:443
        image: miguelacr.azurecr.io/webserver:casopractico2
        state: started
        recreate: true
        generate_systemd:
          path: /etc/systemd/system/
          restart_policy: always
          time: 120
          names: true
          container_prefix: web-service

    - name: Habilitar el servicio
      command: systemctl enable web-service-web.service
          #sudo systemctl enable web-service-web.service --now
          #sudo reboot
          #para verificar sudo systemctl status web-service-web.service
        
